name: 编译openwrt固

on:
  schedule:
     - cron: '0 1 * * 5'  # 每星期五 UTC 时间 01:00 触发
       timezone: 'Asia/Shanghai' 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: 准备开始
        uses: actions/checkout@main

      - name: 清理磁盘空间
        uses: easimon/maximize-build-space@master
        with: 
          root-reserve-mb: 2048
          swap-size-mb: 1
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: 安装系统依赖
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
          git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
          libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
          mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \
          libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
          vim wget xmlto xxd zlib1g-dev python3-setuptools
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo rm -rf /etc/apt/sources.list.d/* /usr/local/lib/android /opt/ghc /usr/share/dotnet /usr/local/graalvm /usr/local/.ghcup \
          /usr/local/share/powershell /usr/local/share/chromium /usr/local/lib/node_modules
          sudo -E systemctl daemon-reload
          sudo -E timedatectl set-timezone "Asia/Shanghai"
      
      - name: 下载固件源码
        working-directory: ./
        run: |
          git clone https://github.com/coolsnowwolf/lede

      - name: 更新软件包
        run: |
          cd lede
          echo "src-git zheng https://github.com/zjt37/packages.git;main" >> "feeds.conf.default"
          echo "src-git helloworld https://github.com/fw876/helloworld.git" >> "feeds.conf.default"
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          ./scripts/feeds install -a

      - name: 常用配置修改
        run: |
          cd lede
          sed -i 's/192.168.1.1/192.168.2.3/g' package/base-files/files/bin/config_generate
          sed -i 's/192.168.1.1/192.168.2.3/g' package/base-files/luci2/bin/config_generate
          sed -i 's/ShadowSocksR Plus+/SSR Plus+/g' package/feeds/helloworld/luci-app-ssr-plus/luasrc/controller/shadowsocksr.lua
          

      - name: 配置固件文件
        run: |
          cd lede
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          # CONFIG_GRUB_EFI_IMAGES is not set
          CONFIG_GRUB_IMAGES=y
          CONFIG_OPENSSH_LIBFIDO2=y
          # CONFIG_PACKAGE_TURBOACC_INCLUDE_BBR_CCA is not set
          # CONFIG_PACKAGE_automount is not set
          # CONFIG_PACKAGE_autosamba is not set
          CONFIG_PACKAGE_autossh=y
          CONFIG_PACKAGE_avahi-dbus-daemon=y
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_chinadns-ng=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_dbus=y
          # CONFIG_PACKAGE_etherwake is not set
          # CONFIG_PACKAGE_firewall is not set
          CONFIG_PACKAGE_firewall4=y
          CONFIG_PACKAGE_geoview=y
          # CONFIG_PACKAGE_grub2-efi is not set
          CONFIG_PACKAGE_haproxy=y
          CONFIG_PACKAGE_ipt2socks=y
          # CONFIG_PACKAGE_iptables-mod-fullconenat is not set
          CONFIG_PACKAGE_iptables-mod-iprange=y
          CONFIG_PACKAGE_iptables-mod-socket=y
          CONFIG_PACKAGE_jansson=y
          # CONFIG_PACKAGE_kmod-fs-ksmbd is not set
          CONFIG_PACKAGE_kmod-inet-diag=y
          # CONFIG_PACKAGE_kmod-ipt-fullconenat is not set
          CONFIG_PACKAGE_kmod-ipt-iprange=y
          # CONFIG_PACKAGE_kmod-ipt-offload is not set
          CONFIG_PACKAGE_kmod-ipt-socket=y
          CONFIG_PACKAGE_kmod-netlink-diag=y
          # CONFIG_PACKAGE_kmod-nf-conntrack-netlink is not set
          CONFIG_PACKAGE_kmod-nf-socket=y
          CONFIG_PACKAGE_kmod-nft-core=y
          CONFIG_PACKAGE_kmod-nft-fib=y
          CONFIG_PACKAGE_kmod-nft-nat=y
          CONFIG_PACKAGE_kmod-nft-offload=y
          CONFIG_PACKAGE_kmod-nft-socket=y
          CONFIG_PACKAGE_kmod-nft-tproxy=y
          # CONFIG_PACKAGE_kmod-tcp-bbr is not set
          # CONFIG_PACKAGE_ksmbd-server is not set
          CONFIG_PACKAGE_libatomic=y
          CONFIG_PACKAGE_libavahi-dbus-support=y
          CONFIG_PACKAGE_libcap=y
          CONFIG_PACKAGE_libcap-bin=y
          CONFIG_PACKAGE_libcap-bin-capsh-shell="/bin/sh"
          CONFIG_PACKAGE_libcbor=y
          CONFIG_PACKAGE_libdaemon=y
          CONFIG_PACKAGE_libdbus=y
          CONFIG_PACKAGE_libeudev=y
          CONFIG_PACKAGE_libevent2=y
          CONFIG_PACKAGE_libexpat=y
          CONFIG_PACKAGE_libfido2=y
          CONFIG_PACKAGE_libgmp=y
          CONFIG_PACKAGE_libltdl=y
          CONFIG_PACKAGE_liblua5.3=y
          CONFIG_PACKAGE_libnftnl=y
          CONFIG_PACKAGE_libruby=y
          CONFIG_PACKAGE_libssh=y
          CONFIG_PACKAGE_libyaml=y
          # CONFIG_PACKAGE_luci-app-accesscontrol is not set
          # CONFIG_PACKAGE_luci-app-arpbind is not set
          # CONFIG_PACKAGE_luci-app-autoreboot is not set
          # CONFIG_PACKAGE_luci-app-ddns is not set
          # CONFIG_PACKAGE_luci-app-filetransfer is not set
          # CONFIG_PACKAGE_luci-app-ksmbd is not set
          CONFIG_PACKAGE_luci-app-nikki=y
          # CONFIG_PACKAGE_luci-app-nlbwmon is not set
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-passwall=y
          CONFIG_PACKAGE_luci-app-passwall2=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Haproxy=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_ShadowsocksR_Libev_Client=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Shadowsocks_Libev_Client=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Simple_Obfs=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_SingBox=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_V2ray_Plugin=y
          CONFIG_PACKAGE_luci-app-passwall2_Iptables_Transparent_Proxy=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Geoview=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Haproxy=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_Libev_Client=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Libev_Client=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Libev_Server=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Simple_Obfs=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_SingBox=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan_Plus=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray_Plugin=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Xray=y
          CONFIG_PACKAGE_luci-app-passwall_Iptables_Transparent_Proxy=y
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-ng is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-webui is not set
          # CONFIG_PACKAGE_luci-app-turboacc is not set
          # CONFIG_PACKAGE_luci-app-upnp is not set
          # CONFIG_PACKAGE_luci-app-vlmcsd is not set
          # CONFIG_PACKAGE_luci-app-vsftpd is not set
          # CONFIG_PACKAGE_luci-app-wol is not set
          CONFIG_PACKAGE_luci-i18n-nikki-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-passwall2-zh-cn=y
          # CONFIG_PACKAGE_luci-lib-fs is not set
          CONFIG_PACKAGE_luci-theme-material=y
          CONFIG_PACKAGE_luci-theme-atmaterial_new=y
          # CONFIG_PACKAGE_miniupnpd is not set
          CONFIG_PACKAGE_msgpack-c=y
          CONFIG_PACKAGE_nftables-json=y
          CONFIG_PACKAGE_nikki=y
          # CONFIG_PACKAGE_nlbwmon is not set
          CONFIG_PACKAGE_openssh-client=y
          CONFIG_PACKAGE_openssh-client-utils=y
          CONFIG_PACKAGE_openssh-keygen=y
          CONFIG_PACKAGE_openssh-moduli=y
          CONFIG_PACKAGE_openssh-server=y
          CONFIG_PACKAGE_openssh-sftp-avahi-service=y
          CONFIG_PACKAGE_openssh-sftp-client=y
          CONFIG_PACKAGE_openssh-sftp-server=y
          CONFIG_PACKAGE_ruby=y
          CONFIG_PACKAGE_ruby-bigdecimal=y
          CONFIG_PACKAGE_ruby-date=y
          CONFIG_PACKAGE_ruby-digest=y
          CONFIG_PACKAGE_ruby-enc=y
          CONFIG_PACKAGE_ruby-forwardable=y
          CONFIG_PACKAGE_ruby-pstore=y
          CONFIG_PACKAGE_ruby-psych=y
          CONFIG_PACKAGE_ruby-stringio=y
          CONFIG_PACKAGE_ruby-strscan=y
          CONFIG_PACKAGE_ruby-yaml=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-local=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y
          CONFIG_PACKAGE_sing-box=y
          CONFIG_PACKAGE_sshtunnel=y
          CONFIG_PACKAGE_tmate=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_v2ray-geoip=y
          CONFIG_PACKAGE_v2ray-geosite=y
          CONFIG_PACKAGE_v2ray-plugin=y
          # CONFIG_PACKAGE_vlmcsd is not set
          # CONFIG_PACKAGE_vsftpd-alt is not set
          CONFIG_PACKAGE_yq=y
          CONFIG_SING_BOX_WITH_CLASH_API=y
          CONFIG_SING_BOX_WITH_DHCP=y
          CONFIG_SING_BOX_WITH_ECH=y
          CONFIG_SING_BOX_WITH_GVISOR=y
          CONFIG_SING_BOX_WITH_QUIC=y
          CONFIG_SING_BOX_WITH_UTLS=y
          CONFIG_SING_BOX_WITH_WIREGUARD=y
          # CONFIG_TARGET_IMAGES_GZIP is not set
          CONFIG_TARGET_KERNEL_PARTSIZE=200
          CONFIG_TARGET_ROOTFS_PARTSIZE=600
          CONFIG_PACKAGE_kmod-crypto-ccm=y
          CONFIG_PACKAGE_kmod-crypto-cmac=y
          CONFIG_PACKAGE_kmod-crypto-des=y
          CONFIG_PACKAGE_kmod-crypto-md4=y
          CONFIG_PACKAGE_kmod-crypto-md5=y
          CONFIG_PACKAGE_kmod-crypto-sha256=y
          CONFIG_PACKAGE_kmod-fs-exfat=y
          CONFIG_PACKAGE_kmod-fs-ext4=y
          CONFIG_PACKAGE_kmod-fs-ntfs3=y
          CONFIG_PACKAGE_kmod-lib-crc16=y
          CONFIG_PACKAGE_kmod-oid-registry=y
          CONFIG_PACKAGE_kmod-scsi-core=y
          CONFIG_PACKAGE_kmod-usb-storage=y
          CONFIG_PACKAGE_kmod-usb-storage-extras=y
          CONFIG_PACKAGE_kmod-usb-storage-uas=y
          CONFIG_PACKAGE_libnl-core=y
          CONFIG_PACKAGE_libnl-genl=y
          CONFIG_PACKAGE_wsdd2=y
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
  
      - name: 下载DL库
        run: |
          cd lede
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: 开始编译固件
        run: |
          cd lede
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s

      - name: 获取release ID
        id: get-release
        run: |
          # 获取最新 Release 的信息（排除草稿和预发布）
          RELEASE_JSON=$(curl -s -H "Authorization: token ${{ secrets.SOURCE_REPO_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          RELEASE_ID=$(echo "$RELEASE_JSON" | jq -r '.id')
          TAG_NAME=$(echo "$RELEASE_JSON" | jq -r '.tag_name')

          # 输出变量供后续步骤使用
          echo "RELEASE_ID=$RELEASE_ID" >> $GITHUB_ENV
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: 删除上次release
        if: env.RELEASE_ID != 'null'
        run: |
          # 删除 Release
          curl -X DELETE \
            -H "Authorization: token ${{ secrets.SOURCE_REPO_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }}"

          # 删除关联的标签
          curl -X DELETE \
            -H "Authorization: token ${{ secrets.SOURCE_REPO_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/git/refs/tags/${{ env.TAG_NAME }}"  

      - name: 获取发布时间
        id: timestamp
        run: |
          echo "CURRENT_TIMESTAMP=$(date -u +"%Y%m%d%H%M%S")" >> $GITHUB_ENV

      - name: 发布固件
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.SOURCE_REPO_TOKEN }}
          file: lede/bin/targets/x86/64/openwrt-x86-64-generic-squashfs-combined.img
          asset_name: openwrt.img
          tag: openwrt-${{ env.CURRENT_TIMESTAMP }}
          overwrite: true          
            
          

      - name: 删除上次运行记录
        env:
          GH_TOKEN: ${{ secrets.SOURCE_REPO_TOKEN }}
        run: |
          current_run_id=$(curl -s -H "Authorization: token $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs \
            | jq -r '.workflow_runs[0].id')
          previous_run_id=$(curl -s -H "Authorization: token $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs \
            | jq -r '.workflow_runs[1].id')
          curl -X DELETE -H "Authorization: token $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/$previous_run_id
